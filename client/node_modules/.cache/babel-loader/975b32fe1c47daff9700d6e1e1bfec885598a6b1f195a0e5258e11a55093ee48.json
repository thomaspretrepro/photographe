{"ast":null,"code":"// Configuration GitHub partagée\n// Ce fichier contient la configuration du repository GitHub pour la publication automatique\n// Modifiez ces valeurs selon votre repository\nexport const GITHUB_CONFIG={// Nom d'utilisateur ou organisation GitHub\nowner:'thomaspretrepro',// Nom du repository\nrepo:'photographe',// Branche principale (généralement 'main' ou 'master')\nbranch:'main',// Token GitHub (Personal Access Token)\ntoken:'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',// Instructions pour la configuration\ninstructions:{tokenSetup:['1. Allez sur GitHub → Settings → Developer settings','2. Cliquez sur Personal access tokens → Tokens (classic)','3. Cliquez sur Generate new token (classic)','4. Donnez un nom au token (ex: \"Portfolio Admin\")','5. Sélectionnez les permissions : repo et workflow','6. Cliquez sur Generate token','7. Copiez le token immédiatement (il ne sera plus visible)'],repositorySetup:['1. Dans votre repository → Settings → Pages','2. Source : Deploy from a branch','3. Branch : main (ou master)','4. Folder : / (root)','5. Cliquez sur Save']}};// Fonction pour vérifier si la configuration est complète\nexport const isConfigurationComplete=()=>{return GITHUB_CONFIG.owner!=='VOTRE_USERNAME'&&GITHUB_CONFIG.repo!=='VOTRE_REPO'&&GITHUB_CONFIG.token!=='VOTRE_TOKEN_GITHUB';};// Fonction pour obtenir l'URL du repository\nexport const getRepositoryUrl=()=>{if(!isConfigurationComplete()){return null;}return\"https://github.com/\".concat(GITHUB_CONFIG.owner,\"/\").concat(GITHUB_CONFIG.repo);};// Fonction pour obtenir l'URL des GitHub Actions\nexport const getActionsUrl=()=>{if(!isConfigurationComplete()){return null;}return\"https://github.com/\".concat(GITHUB_CONFIG.owner,\"/\").concat(GITHUB_CONFIG.repo,\"/actions\");};// Fonction pour obtenir l'URL des settings GitHub Pages\nexport const getPagesUrl=()=>{if(!isConfigurationComplete()){return null;}return\"https://github.com/\".concat(GITHUB_CONFIG.owner,\"/\").concat(GITHUB_CONFIG.repo,\"/settings/pages\");};","map":{"version":3,"names":["GITHUB_CONFIG","owner","repo","branch","token","instructions","tokenSetup","repositorySetup","isConfigurationComplete","getRepositoryUrl","concat","getActionsUrl","getPagesUrl"],"sources":["/Users/thpretre/WWW/photographe/client/src/config/github.js"],"sourcesContent":["// Configuration GitHub partagée\n// Ce fichier contient la configuration du repository GitHub pour la publication automatique\n// Modifiez ces valeurs selon votre repository\n\nexport const GITHUB_CONFIG = {\n  // Nom d'utilisateur ou organisation GitHub\n  owner: 'thomaspretrepro',\n  \n  // Nom du repository\n  repo: 'photographe',\n  \n  // Branche principale (généralement 'main' ou 'master')\n  branch: 'main',\n  \n  // Token GitHub (Personal Access Token)\n  token: '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',\n  \n  // Instructions pour la configuration\n  instructions: {\n    tokenSetup: [\n      '1. Allez sur GitHub → Settings → Developer settings',\n      '2. Cliquez sur Personal access tokens → Tokens (classic)',\n      '3. Cliquez sur Generate new token (classic)',\n      '4. Donnez un nom au token (ex: \"Portfolio Admin\")',\n      '5. Sélectionnez les permissions : repo et workflow',\n      '6. Cliquez sur Generate token',\n      '7. Copiez le token immédiatement (il ne sera plus visible)'\n    ],\n    repositorySetup: [\n      '1. Dans votre repository → Settings → Pages',\n      '2. Source : Deploy from a branch',\n      '3. Branch : main (ou master)',\n      '4. Folder : / (root)',\n      '5. Cliquez sur Save'\n    ]\n  }\n};\n\n// Fonction pour vérifier si la configuration est complète\nexport const isConfigurationComplete = () => {\n  return GITHUB_CONFIG.owner !== 'VOTRE_USERNAME' &&\n         GITHUB_CONFIG.repo !== 'VOTRE_REPO' &&\n         GITHUB_CONFIG.token !== 'VOTRE_TOKEN_GITHUB';\n};\n\n// Fonction pour obtenir l'URL du repository\nexport const getRepositoryUrl = () => {\n  if (!isConfigurationComplete()) {\n    return null;\n  }\n  return `https://github.com/${GITHUB_CONFIG.owner}/${GITHUB_CONFIG.repo}`;\n};\n\n// Fonction pour obtenir l'URL des GitHub Actions\nexport const getActionsUrl = () => {\n  if (!isConfigurationComplete()) {\n    return null;\n  }\n  return `https://github.com/${GITHUB_CONFIG.owner}/${GITHUB_CONFIG.repo}/actions`;\n};\n\n// Fonction pour obtenir l'URL des settings GitHub Pages\nexport const getPagesUrl = () => {\n  if (!isConfigurationComplete()) {\n    return null;\n  }\n  return `https://github.com/${GITHUB_CONFIG.owner}/${GITHUB_CONFIG.repo}/settings/pages`;\n};"],"mappings":"AAAA;AACA;AACA;AAEA,MAAO,MAAM,CAAAA,aAAa,CAAG,CAC3B;AACAC,KAAK,CAAE,iBAAiB,CAExB;AACAC,IAAI,CAAE,aAAa,CAEnB;AACAC,MAAM,CAAE,MAAM,CAEd;AACAC,KAAK,CAAE,0CAA0C,CAEjD;AACAC,YAAY,CAAE,CACZC,UAAU,CAAE,CACV,qDAAqD,CACrD,0DAA0D,CAC1D,6CAA6C,CAC7C,mDAAmD,CACnD,oDAAoD,CACpD,+BAA+B,CAC/B,4DAA4D,CAC7D,CACDC,eAAe,CAAE,CACf,6CAA6C,CAC7C,kCAAkC,CAClC,8BAA8B,CAC9B,sBAAsB,CACtB,qBAAqB,CAEzB,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,uBAAuB,CAAGA,CAAA,GAAM,CAC3C,MAAO,CAAAR,aAAa,CAACC,KAAK,GAAK,gBAAgB,EACxCD,aAAa,CAACE,IAAI,GAAK,YAAY,EACnCF,aAAa,CAACI,KAAK,GAAK,oBAAoB,CACrD,CAAC,CAED;AACA,MAAO,MAAM,CAAAK,gBAAgB,CAAGA,CAAA,GAAM,CACpC,GAAI,CAACD,uBAAuB,CAAC,CAAC,CAAE,CAC9B,MAAO,KAAI,CACb,CACA,4BAAAE,MAAA,CAA6BV,aAAa,CAACC,KAAK,MAAAS,MAAA,CAAIV,aAAa,CAACE,IAAI,EACxE,CAAC,CAED;AACA,MAAO,MAAM,CAAAS,aAAa,CAAGA,CAAA,GAAM,CACjC,GAAI,CAACH,uBAAuB,CAAC,CAAC,CAAE,CAC9B,MAAO,KAAI,CACb,CACA,4BAAAE,MAAA,CAA6BV,aAAa,CAACC,KAAK,MAAAS,MAAA,CAAIV,aAAa,CAACE,IAAI,aACxE,CAAC,CAED;AACA,MAAO,MAAM,CAAAU,WAAW,CAAGA,CAAA,GAAM,CAC/B,GAAI,CAACJ,uBAAuB,CAAC,CAAC,CAAE,CAC9B,MAAO,KAAI,CACb,CACA,4BAAAE,MAAA,CAA6BV,aAAa,CAACC,KAAK,MAAAS,MAAA,CAAIV,aAAa,CAACE,IAAI,oBACxE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}